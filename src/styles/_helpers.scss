@use 'variables' as v;

// ---------- TEXT COLORS ----------
@each $name, $color in v.$colors {
  .text-#{$name} {
    color: #{$color};
  }
}

// ---------- BACKGROUND COLORS ----------
@each $name, $color in v.$bg {
  .bg-#{$name} {
    background-color: #{$color};
  }
}

// ---------- HOVER BACKGROUND FAINT ----------
@each $name, $color in v.$colors-hover-faint {
  .hover\:bg-#{$name}-faint:hover {
    background: #{$color};
  }
}

// ---------- FONT SIZES ----------
@each $name, $size in v.$font-sizes {
  .font-#{$name} {
    font-size: #{$size};
  }
}

// Responsive font-size helpers
@each $bp-name, $bp-size in v.$breakpoints {
  @media (min-width: #{$bp-size}) {
    @each $fs-name, $fs-size in v.$font-sizes {
      .#{$bp-name}\:font-#{$fs-name} {
        font-size: $fs-size;
      }
    }
  }
}

// ---------- FONT WEIGHTS ----------
.font-light     { font-weight: 300; }
.font-normal    { font-weight: 400; }
.font-medium    { font-weight: 500; }
.font-semibold  { font-weight: 600; }
.font-bold      { font-weight: 700; }

// ---------- SPACING UTILITIES ----------
@each $key, $val in v.$spacing {
  .m-#{$key}   { margin: $val; }
  .mt-#{$key}  { margin-top: $val; }
  .mb-#{$key}  { margin-bottom: $val; }
  .ml-#{$key}  { margin-left: $val; }
  .mr-#{$key}  { margin-right: $val; }

  .p-#{$key}   { padding: $val; }
  .pt-#{$key}  { padding-top: $val; }
  .pb-#{$key}  { padding-bottom: $val; }
  .pl-#{$key}  { padding-left: $val; }
  .pr-#{$key}  { padding-right: $val; }
}

// ---------- RESPONSIVE SPACING UTILITIES ----------
@each $bp-name, $bp-size in v.$breakpoints {
  @media (min-width: #{$bp-size}) {
    @each $key, $val in v.$spacing {
      // Margin
      .#{$bp-name}\:m-#{$key}   { margin: $val; }
      .#{$bp-name}\:mt-#{$key}  { margin-top: $val; }
      .#{$bp-name}\:mb-#{$key}  { margin-bottom: $val; }
      .#{$bp-name}\:ml-#{$key}  { margin-left: $val; }
      .#{$bp-name}\:mr-#{$key}  { margin-right: $val; }

      // Padding
      .#{$bp-name}\:p-#{$key}   { padding: $val; }
      .#{$bp-name}\:pt-#{$key}  { padding-top: $val; }
      .#{$bp-name}\:pb-#{$key}  { padding-bottom: $val; }
      .#{$bp-name}\:pl-#{$key}  { padding-left: $val; }
      .#{$bp-name}\:pr-#{$key}  { padding-right: $val; }
    }
  }
}

// ---------- BORDER RADIUS ----------
.rounded        { border-radius: v.$radius; }
.rounded-100    { border-radius: 100%; }
.rounded-none   { border-radius: 0; }
.rounded-sm     { border-radius: calc(v.$radius * 0.5); }
.rounded-md     { border-radius: calc(v.$radius * 0.8); }
.rounded-lg     { border-radius: calc(v.$radius * 1.5); }


@mixin media-up($breakpoint) {
  @media (min-width: map-get(v.$breakpoints, $breakpoint)) {
    @content;
  }
}
